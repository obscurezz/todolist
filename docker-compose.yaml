version: "3.8"

services:
  front:
    container_name: todolist_nginx_front
    image: sermalenk/skypro-front:lesson-38
    depends_on:
      - api
    ports:
      - "80:80"
  api:
    container_name: api
    restart: always
    build:
      context: .
      target: api-image
    links:
      - postgres
    environment:
      DATABASE_HOST: postgres
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
  migrations:
    build:
      context: .
      target: api-image
    links:
      - postgres
    environment:
      DATABASE_HOST: postgres
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["python", "skypro/manage.py", "migrate", "--noinput"]
  postgres:
    container_name: todolist_pg_db
    image: postgres:15.1-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - todolist_pgdata:/var/lib/postgresql/data
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready --username=${POSTGRES_USER} --dbname=${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 3
  bot:
    build:
      context: .
      target: bot-image
    environment:
      DATABASE_HOST: postgres
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: ${DATABASE_URL}
      TG_TOKEN: ${TG_TOKEN}
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

volumes:
  todolist_pgdata:
    driver: local

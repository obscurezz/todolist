version: "3.8"

networks:
  todolist-network:
    driver: bridge

services:
  front:
    networks:
      - todolist-network
    container_name: todolist_nginx_front
    image: sermalenk/skypro-front:lesson-34
    depends_on:
      - api
    ports:
      - "80:80"
  api:
    networks:
      - todolist-network
    container_name: api
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    links:
      - postgres
    environment:
      DATABASE_HOST: postgres
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    expose:
      - "8000"
  migrations:
    networks:
      - todolist-network
    build:
      context: .
      dockerfile: Dockerfile
    links:
      - postgres
    environment:
      DATABASE_HOST: postgres
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["python", "skypro/manage.py", "migrate", "--noinput"]
  postgres:
    networks:
      - todolist-network
    container_name: todolist_pg_db
    image: postgres:15.1-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - todolist_pgdata:/var/lib/postgresql/data
    restart: always
    expose:
      - "5432"
    healthcheck:
      test: pg_isready --username=${POSTGRES_USER} --dbname=${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 3

volumes:
  todolist_pgdata:
    driver: local

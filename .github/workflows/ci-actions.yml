name: build/deploy workflow
on: [push]

env:
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  TG_TOKEN: ${{ secrets.TG_TOKEN }}

jobs:

  build-n-push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker login
        run: echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USER }} --password-stdin
      - name: docker build api image
        run: docker build -t ${{ secrets.DOCKER_HUB_USER }}/todolist-skypro:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker build bot image
        run: docker build -t ${{ secrets.DOCKER_HUB_USER }}/todolist-skypro-tg-bot:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker push api image
        run: docker push ${{ secrets.DOCKER_HUB_USER }}/todolist-skypro:$GITHUB_REF_NAME-$GITHUB_RUN_ID
      - name: docker push bot image
        run: docker push ${{ secrets.DOCKER_HUB_USER }}/todolist-skypro-tg-bot:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
    runs-on: ubuntu-latest
    needs: build-n-push
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: create deployment
        run: |
          mkdir -p todolist_deploy
          cat deploy/docker-compose-deploy.yaml | envsubst > todolist_deploy/docker-compose.yaml
      - name: scp files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_NAME }}
          username: ${{ secrets.SERVER_LOGIN }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "todolist_deploy/docker-compose.yaml"
          target: "todolist_deploy"
          strip_components: 1
      - name: deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_NAME }}
          username: ${{ secrets.SERVER_LOGIN }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd todolist_deploy
            echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USER }} --password-stdin
            docker-compose up -d --remove-orphans